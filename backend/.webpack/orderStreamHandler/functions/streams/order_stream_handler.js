(()=>{var e={496:e=>{"use strict";e.exports=require("aws-sdk")}},o={};function n(s){var t=o[s];if(void 0!==t)return t.exports;var r=o[s]={exports:{}};return e[s](r,r.exports,n),r.exports}var s={};(()=>{var e=s;const o=n(496),t=new o.ApiGatewayManagementApi({apiVersion:"2018-11-29",endpoint:process.env.WEBSOCKET_ENDPOINT.replace("wss://","")}),r=new o.DynamoDB.DocumentClient,i=process.env.MERCHANT_ENDPOINTS_TABLE;async function a(e){const o={TableName:i,KeyConditionExpression:"merchantId = :merchantId AND endpointType = :type",ExpressionAttributeValues:{":merchantId":e,":type":"websocket"}};try{return(await r.query(o).promise()).Items}catch(e){return console.error("Error fetching connections for business:",e),[]}}async function c(e,o){try{await t.postToConnection({ConnectionId:e,Data:JSON.stringify(o)}).promise()}catch(o){410===o.statusCode?(console.log(`Found stale connection, deleting ${e}`),await r.delete({TableName:i,Key:{connectionId:e}}).promise()):console.error("Error sending message to connection:",o)}}e.handler=async e=>{console.log("Received event:",JSON.stringify(e,null,2));for(const n of e.Records)if("INSERT"===n.eventName){const e=o.DynamoDB.Converter.unmarshall(n.dynamodb.NewImage),s=e.storeId||e.businessId;if(!s){console.log("Order does not have a businessId or storeId, skipping notification."),console.log("Available fields:",Object.keys(e));continue}console.log(`Processing new order ${e.orderId} for business ${s}`);const t=await a(s);if(0===t.length){console.log(`No active connections found for business ${s}.`);continue}const r={type:"NEW_ORDER",data:e},i=t.map(e=>c(e.connectionId,r));await Promise.all(i)}return{statusCode:200,body:JSON.stringify({message:"Stream processed successfully."})}}})();var t=exports;for(var r in s)t[r]=s[r];s.__esModule&&Object.defineProperty(t,"__esModule",{value:!0})})();