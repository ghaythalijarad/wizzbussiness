service: order-receiver-api

plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  memorySize: 512
  timeout: 29
  environment:
    ENVIRONMENT: ${self:provider.stage}
    USERS_TABLE: order-receiver-users-${self:provider.stage}
    BUSINESSES_TABLE: order-receiver-businesses-${self:provider.stage}
    COGNITO_USER_POOL_ID: ${self:params.CognitoUserPoolId}
    COGNITO_CLIENT_ID: ${self:params.CognitoClientId}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:GetItem"
            - "dynamodb:PutItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:Query"
            - "dynamodb:Scan"
          Resource:
            - "arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/order-receiver-users-${self:provider.stage}"
            - "arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/order-receiver-users-${self:provider.stage}/index/*"
            - "arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/order-receiver-businesses-${self:provider.stage}"
            - "arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/order-receiver-businesses-${self:provider.stage}/index/*"
        - Effect: "Allow"
          Action:
            - "cognito-idp:AdminGetUser"
            - "cognito-idp:AdminCreateUser"
            - "cognito-idp:AdminDeleteUser"
            - "cognito-idp:AdminUpdateUserAttributes"
            - "cognito-idp:SignUp"
            - "cognito-idp:ConfirmSignUp"
            - "cognito-idp:InitiateAuth"
            - "cognito-idp:ResendConfirmationCode"
          Resource: "arn:aws:cognito-idp:${aws:region}:${aws:accountId}:userpool/${self:params.CognitoUserPoolId}"

params:
  CognitoUserPoolId: us-east-1_bDqnKdrqo
  CognitoClientId: 6n752vrmqmbss6nmlg6be2nn9a

functions:
  unifiedAuth:
    handler: functions/auth/unified_auth_handler.handler
    name: order-receiver-${self:provider.stage}-unified-auth-v2-sls
    events:
      - http:
          path: /auth/register-with-business
          method: post
          cors: true
      - http:
          path: /auth/confirm
          method: post
          cors: true
      - http:
          path: /auth/check-email
          method: post
          cors: true
      - http:
          path: /auth/signin
          method: post
          cors: true
      - http:
          path: /auth/resend-code
          method: post
          cors: true
      - http:
          path: /auth/health
          method: get
          cors: true
  health:
    handler: functions/health_check.handler
    name: order-receiver-${self:provider.stage}-health-v2-sls
    events:
      - http:
          path: /health
          method: get
          cors: true

package:
  individually: true

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

build:
  esbuild: false

outputs:
  ApiGatewayEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ApiGatewayRestApi}.execute-api.${aws:region}.amazonaws.com/${self:provider.stage}/"
    Export:
      Name: !Sub "${AWS::StackName}-ApiEndpoint"
