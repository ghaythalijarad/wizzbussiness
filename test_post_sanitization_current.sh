#!/bin/bash

echo "üß™ Testing POST Request Token Sanitization"
echo "========================================="
echo

# Get the stored token
if [ -f "frontend/access_token.txt" ]; then
    token=$(cat frontend/access_token.txt)
    echo "‚úÖ Found stored token (${#token} characters)"
else
    echo "‚ùå No token file found. Please ensure authentication is working."
    exit 1
fi

# Test the token for problematic characters
echo "üîç Token analysis:"
echo "  - Contains line breaks: $(echo "$token" | grep -c $'\n')"
echo "  - Contains spaces: $(echo "$token" | grep -c ' ')"
echo "  - Token sample: ${token:0:50}..."

# Create test product data
product_data='{
  "name": "Test Product - POST Sanitization Check",
  "description": "Testing if POST requests use sanitized tokens properly",
  "price": 15.99,
  "categoryId": "test-category-id",
  "isAvailable": true
}'

echo
echo "üì§ Making POST request to create product..."
echo "üìã Request data: $product_data"

# Make the POST request
response=$(curl -s -w "\n%{http_code}" \
  -X POST \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $token" \
  -d "$product_data" \
  "https://72nmgq5rc4.execute-api.us-east-1.amazonaws.com/dev/products" 2>&1)

# Extract HTTP status code and body
http_code=$(echo "$response" | tail -n1)
http_body=$(echo "$response" | head -n -1)

echo
echo "üì§ Response Status: $http_code"
echo "üì§ Response Body: $http_body"
echo

# Check for the corruption error
if [[ "$http_body" == *"Invalid key=value pair"* ]]; then
    echo "‚ùå CORRUPTION ERROR DETECTED!"
    echo "‚ùå The 'Invalid key=value pair' error is still occurring"
    echo "‚ùå This means POST requests are NOT using enhanced sanitization"
    echo "‚ùå The token sanitization fix has NOT been applied to POST requests"
elif [[ "$http_code" == "401" ]]; then
    echo "‚ö†Ô∏è Authorization error (401) - but NO corruption error"
    echo "‚ö†Ô∏è This suggests tokens are properly formatted but may be expired/invalid"
    echo "‚úÖ Token format is correct (no corruption error)"
elif [[ "$http_code" == "201" ]]; then
    echo "‚úÖ SUCCESS! Product created successfully"
    echo "‚úÖ Token sanitization is working perfectly for POST requests"
elif [[ "$http_code" == "400" ]]; then
    echo "‚ö†Ô∏è Bad Request (400) - but NO corruption error"
    echo "‚úÖ Token format is correct (no corruption error)"
    echo "‚ö†Ô∏è May be missing required fields or invalid data"
else
    echo "‚ö†Ô∏è Unexpected response: $http_code"
    echo "‚úÖ But no corruption error, so token format is probably OK"
fi

echo
echo "üîç Analysis:"
echo "- Token length: ${#token}"
echo "- HTTP Status: $http_code"
echo "- Contains 'Invalid key=value pair': $(echo "$http_body" | grep -c 'Invalid key=value pair')"
echo "- Response length: ${#http_body}"
